var(STanOJ[,2])
StanOJ = scale(OJ[,-1])
StanOJ = scale(OJ[,2:13])
StanOJ = scale(OJ[,2:13&15:18])
StanOJ = scale(OJ[,15:18])
StanOJ = scale(OJ[,(2:13, 15:18)])
StanOJ = scale(OJ[,(2:13+15:18)])
StanOJ = scale(OJ[,(2:13&15:18)])
rm(StanOJ)
Stan_OJ = scale(OJ[,2:14])
Stan_OJ = scale(OJ[,2:13])
test = 1:200
test_data = Stan_OJ[test,]
test_purchase = OJ[test,1]
train = -test
train_data = Stan_OJ[train,]
train = 201:1070
train_data = Stan_OJ[train,]
train_purchase = Stan_OJ[train,1]
train = 201:1070
train_data = Stan_OJ[train,]
train_purchase = Stan_OJ[train,1]
test = 1:200
test_data = Stan_OJ[test,]
test_purchase = OJ[test,1]
train = -test
train_data = Stan_OJ[train,]
train_purchase = Stan_OJ[train,1]
rm(train_purchase)
train = 201:1070
train_data = Stan_OJ[train,]
train_purchase = Stan_OJ[train,1]
rm(train_purchase)
train = 201:1070
train_data = Stan_OJ[train,]
View(Stan_OJ)
View(Stan_OJ)
library(class)
library(ISLR)
?OJ
attach(OJ)
names(OJ)
summary(OJ[,1])
var(OJ[,2])
var(OJ[,3])
Stan_OJ = scale(OJ[,2:13])
test = 1:200
test_data = Stan_OJ[test,]
test_purchase = OJ[test,1]
View(Stan_OJ)
View(Stan_OJ)
train = 201:1070
train_data = Stan_OJ[train,]
train_purchase = Stan_OJ[train,1]
train_purchase = OJ[train,1]
predicted_purchase = knn(train_data, test_data, train_purchase, k=1)
mean(predicted_purchase != test_purchase)
for(i in 1:100)
set.seed(1)
predicted_purchase = knn(train_data,
test_data,
train_purchase,
k=i)
error[i] = mean(predicted_purchase != test_purchase)
for(i in 1:100)
set.seed(1)
predicted_purchase = knn(train_data,
test_data,
train_purchase,
k=i)
error[i] = mean(predicted_purchase != test_purchase)
error1 = mean(predicted_purchase != test_purchase)
rm(error1)
error = NULL
for(i in 1:100)
set.seed(1)
predicted_purchase = knn(train_data,
test_data,
train_purchase,
k=i)
error[i] = mean(predicted_purchase != test_purchase)
error = NULL
for(i in 1:100){  set.seed(1)
predicted_purchase = knn(train_data,
test_data,
train_purchase,
k=i)
error[i] = mean(predicted_purchase != test_purchase)
}
min_error = min(error)
which(error ==min_error)
Optimal_K = which(error ==min_error)
plot(error, i)
plot(i,error)
KvE = [i, error]
KvE = c[i, error]
plot(error)
###Split the data into testing and training
test = 1:200
test_data = Stan_OJ[test,]
test_purchase = OJ[test,1]
train = 201:1070
train_data = Stan_OJ[train,]
train_purchase = OJ[train,1]
###Create the Model
set.seed(1)
predicted_purchase = knn(train_data, test_data, train_purchase, k=1)
###Error Rate
mean(predicted_purchase != test_purchase)
?OJ
library(class)
library(ISLR)
?carseats
library("ISLR", lib.loc="~/R/win-library/3.1")
library(class)
library(ISLR)
?carseats
###Load Library and Attach
library(class)
library(ISLR)
?Carseats
attach(Carseats)
password <- function(length){
characters <- c(letters, LETTERS,0:9)
paste(sample(characters,length, TRUE))
}
PASSWORD(length=4)
password(length=4)
password <- function(length){
characters <- c(letters, LETTERS,0:9)
paste(sample(characters,length, TRUE), collapse = "")
}
password(length=10)
password(length=10)
password <- function(length){
characters <- c(letters, LETTERS,0:9)
paste(sample(characters,length, TRUE), collapse = "")
}
password(length=5)
password(length=10)
password(length=15)
library(class)
library(ISLR)
?Carseats
attach(Carseats)
pairs(Carseats)
summary(Carseats)
pairs(Carseats[,c(1,5,10,11)])
###part 2 R-function random password
lm.fit=lm(Sales-Population-Urban-Us)
lm.fit=lm(Sales-Population-Urban-US)
lm.fit=lm(Sales-.,data=Carseats)
lm.fit=lm(Sales-Population-Urban-US)
summary(Carseats)
pairs(Carseats[,c(1,5,10,11)])
set.seed(1)
sample(Carseats,300)
summary(Carseats)
sample(Carseats,300)
sample(Carseats,300, TRUE)
?Carseats
sample(Carseats,30)
train<-sample(nrow(Carseats),300,replace=FALSE, prob=NULL)
summary(Carseats)
set.seed(1)
train<-sample(nrow(Carseats),300,replace=FALSE, prob=NULL)
test<-Carseats(,-train)
test <- -train
rm(train)
training_data=Carseats(train)
training_data = Carseats(train,)
library(class)
library(ISLR)
?Carseats
attach(Carseats
library(class)
library(ISLR)
?Carseats
attach(Carseats)
set.seed(1)
train <- sample(nrow(Carseats),300,replace=FALSE, prob=NULL)
training_data = Carseats(train,)
library(class)
library(ISLR)
?Carseats
attach(Carseats)
library(class)
library(ISLR)
?Carseats
attach(Carseats)
detach(Carseats)
detach(Carseats)
detach(Carseats)
detach(Carseats)
detach(Carseats)
library(class)
library(ISLR)
?Carseats
attach(Carseats)
set.seed(1)
train <- sample(nrow(Carseats),300,replace=FALSE, prob=NULL)
training_data = Carseats(train,)
training_data = c(Carseats(train,))
training_data <- Carseats(train,)
training_data <- Carseats(train,)
summary(Carseats)
training <- Carseats(train,)
library(MASS)
attach(Boston)
detach(Carseats)
detach(OJ)
train = 1:400
test = -train
training_data = Boston[train,]
testing_data = Boston[test,]
detach(Boston)
library(class)
library(ISLR)
?Carseats
attach(Carseats)
summary(Carseats)
set.seed(1)
train <- sample(nrow(Carseats),300,replace=FALSE, prob=NULL)
test <- -train
training_data <- Carseats[train,-CompPrice,-Income,-Advertising,-Price,-Shelveloc,-Age,-Education]
training_data <- Carseats[train,]
training_data <- Carseats[train,1,5,10,11]
training_data <- training_data[,-2]
training_data <- training_data[,-2]
training_data <- training_data[,-2]
training_data <- training_data[,-3]
training_data <- training_data[,-3]
training_data <- training_data[,-3]
training_data <- training_data[,-3]
View(training_data)
set.seed(1)
train <- sample(nrow(Carseats),300,replace=FALSE, prob=NULL)
test <- -train
training_data <- Carseats[train,]
training_data <- training_data[,-2:4]
training_data <- training_data[,-2:-4]
training_data <- training_data[,-3:-6]
View(training_data)
testing_data <- Carseats[test,]
testing_data <- testing_data[,-2:-4]
testing_data <- testing_data[,-3:-6]
pairs(Carseats[,c(1,5,10,11)])
?Carseats
View(testing_data)
cor(training_data$Population, training_data$Sales)
cor(training_data$Population, training_data$Sales)
cor(training_data$Urban, training_data$Sales)
cor(training_data$US, training_data$Sales)
pairs(Carseats[,c(1,5,10,11)])
plot(log(Population),Sales)
plot(Population^2,Sales)
#randomly split the dataset into training (300) and testing (100) using set.seed(1)
plot(Population,Sales)
plot(1/Population,Sales)
plot(Population,Sales)
abline(Population,Sales)
model <- lm(Sales ~ Population+Urban+US)
summary(model)
abline(model)
rm(abline(model))
summary(model)
mean_US <- 1.0360741
SE_US <- .2921241
Size <- 300
error <- qt(.975,df=Size-1)*SE_US/sqrt(Size)
rm(error)
mean_US <- 1.0360741
SE_US <- .2921241
Size <- 300
error_US <- qt(.975,df=Size-1)*SE_US/sqrt(Size)
LeftCI_US <- mean_US + error_US
RightCI_US <- mean_US - error_US
vif(model)
library(car)
install.packages("car")
library(car)
vif(model)
y <- testing_data$Sales
y_hat <- predict(model, testing_data)
error <- y-y_hat
error_squared = error^2
MSE = mean(error_squared)
MSE
pairs(Carseats[,c(1,5,10,11)])
plot(Population,Sales)
cor(training_data$Population, training_data$Sales)
summary(model)
library(car)
vif(model)
#obtain 95% CI for the coefficients of significant predictors
mean_US <- 1.0360741
SE_US <- .2921241
Size <- 300
error_US <- qt(.975,df=Size-1)*SE_US/sqrt(Size)
LeftCI_US <- mean_US + error_US
RightCI_US <- mean_US - error_US
LeftCI_US
RightCI_US
###part 2 R-function random password
password <- function(length){
characters <- c(letters, LETTERS,0:9)
paste(sample(characters,length, TRUE), collapse = "")
}
password(length=5)
password(length=10)
password(length=15)
setwd("C:/Users/cdot/Desktop/specdata")
files <- list.files(pattern = ".csv")
tables <- lapply(files, read.csv, header = TRUE)
combined.df <- do.call(rbind, tables)
x <- 1
rm(x)
View(tables)
tables
view(combined.df)
View(combined.df)
Tail(combined.df)
tail(combined.df)
summary(combined.df)
head(combined.df)
tail(combined.df)
pollutantmean <- function(directory, pollutant, id){
y <- lapply(tables, rbind)
y <- lapply(tables, rbind)
y
summary(y)
View(combined.df)
head(combined.df)
setwd("C:/Users/cdot/Desktop/specdata")
files <- list.files(pattern = ".csv")
tables <- lapply(files, read.csv, header = TRUE)
a <- c(1,2,3)
a <- a[2]
a <- c(1,2,3)
a <- a[3]
a <- c(1,2,3)
a <- a[,3]
setwd("C:/Users/cdot/Desktop")
cc <- NULL
cr <- NULL
corr <- function(directory, threshold) {
files_list <- list.files(directory, pattern = ".csv", full.names=TRUE)
dat <- NULL
k = 1
for (i in 1:332) {
dat <- read.csv(files_list[i])
cc <- sum(complete.cases(dat))
if(cc > threshold) {
cr[k] <- cor(dat$sulfate, dat$nitrate, use = "complete.obs")
k = k + 1
}
}
return(cr)
}
x = corr("specdata", 150)
summary(x)
setwd("C:/Users/cdot/Desktop/specdata")
setwd("C:/Users/cdot/Desktop/specdata")
setwd("C:/Users/cdot/Desktop/specdata")
source("http://d396qusza40orc.cloudfront.net/rprog%2Fscripts%2Fsubmitscript1.R")
submit()
2
submit()
setwd("C:/Users/cdot/Desktop/specdata")
submit()
setwd("C:/Users/cdot/Desktop/specdata")
submit()
setwd("C:/Users/cdot/Desktop/specdata")
submit()
submit()
setwd("C:/Users/cdot/Desktop/specdata")
submit()
setwd("C:/Users/cdot/Desktop/specdata")
submit()
setwd("C:/Users/cdot/Desktop/specdata")
submit()
setwd("C:/Users/cdot/Desktop/specdata")
submit()
submit()
setwd("C:/Users/cdot/Desktop/specdata")
submit()
setwd("C:/Users/cdot/Desktop")
cc <- NULL
complete <- function(directory, id = 1:332) {
files_list <- list.files(directory, pattern = ".csv", full.names=TRUE)
dat <- NULL
for (i in id) {
dat <- read.csv(files_list[i])
cc[i] <- sum(complete.cases(dat))
}
output = data.frame(id = id , nobs = cc)
return(output)
}
setwd("C:/Users/cdot/Desktop/specdata")
submit()
Submit()
source("http://d396qusza40orc.cloudfront.net/rprog%2Fscripts%2Fsubmitscript1.R")
source("http://d396qusza40orc.cloudfront.net/rprog%2Fscripts%2Fsubmitscript1.R")
source("http://d396qusza40orc.cloudfront.net/rprog%2Fscripts%2Fsubmitscript1.R")
submit()
complete(specdata, 32)
cc <- NULL
complete <- function(directory, id = 1:332) {
files_list <- list.files(directory, pattern = ".csv", full.names=TRUE)
dat <- NULL
for (i in id) {
dat <- read.csv(files_list[i])
cc[i] <- sum(complete.cases(dat))
}
output = data.frame(id = id , nobs = cc)
return(output)
}
setwd("C:/Users/cdot/Desktop")
complete(specdata, 32)
complete("specdata", 32)
complete("specdata", 1)
complete("specdata", 4)
corr("specdata", 160)
setwd("C:/Users/cdot/Desktop")
cc <- NULL
cr <- NULL
corr <- function(directory, threshold) {
files_list <- list.files(directory, pattern = ".csv", full.names=TRUE)
dat <- NULL
k = 1
for (i in 1:332) {
dat <- read.csv(files_list[i])
cc <- sum(complete.cases(dat))
if(cc > threshold) {
cr[k] <- cor(dat$sulfate, dat$nitrate, use = "complete.obs")
k = k + 1
}
}
return(cr)
}
corr("specdata", 160)
setwd("C:/Users/cdot/Desktop/specdata")
submit()
submit()
setwd("C:/Users/cdot/Desktop/specdata")
submit()
setwd("C:/Users/cdot/Desktop/specdata")
submit()
setwd("C:/Users/cdot/Desktop/specdata")
submit
submit()
setwd("C:/Users/cdot/Desktop/specdata")
submit()
setwd("C:/Users/cdot/Desktop/specdata")
cc <- NULL
cr <- NULL
corr <- function(directory, threshold=0) {
files_list <- list.files(directory, pattern = ".csv", full.names=TRUE)
dat <- NULL
k = 1
for (i in 1:332) {
dat <- read.csv(files_list[i])
cc <- sum(complete.cases(dat))
if(cc > threshold) {
cr[k] <- cor(dat$sulfate, dat$nitrate, use = "complete.obs")
k = k + 1
}
}
return(cr)
}
submit()
cc <- NULL
cr <- NULL
corr <- function(directory, threshold) {
files_list <- list.files(directory, pattern = ".csv", full.names=TRUE)
dat <- NULL
k = 1
for (i in 1:332) {
dat <- read.csv(files_list[i])
cc <- sum(complete.cases(dat))
if(cc > threshold) {
cr[k] <- cor(dat$sulfate, dat$nitrate, use = "complete.obs")
k = k + 1
}
}
return(cr)
}
setwd("C:/Users/cdot/Desktop/specdata")
submit()
setwd("C:/Users/cdot/Desktop")
cc <- NULL
cr <- NULL
corr <- function(directory, threshold=0) {
files_list <- list.files(directory, pattern = ".csv", full.names=TRUE)
dat <- NULL
k = 1
for (i in 1:332) {
dat <- read.csv(files_list[i])
cc <- sum(complete.cases(dat))
if(cc > threshold) {
cr[k] <- cor(dat$sulfate, dat$nitrate, use = "complete.obs")
k = k + 1
}
}
return(cr)
}
setwd("C:/Users/cdot/Desktop/specdata")
submit()
setwd("C:/Users/cdot/Desktop/specdata")
submit()
Q
Q
